{
  "api": {
    "User": {
      "endpoint": "/api/users/",
      "description": "Represents a user in the system with their profile information.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the user."
        },
        "username": {
          "type": "string",
          "description": "User's username (read-only, typically the email).",
          "read_only": true
        },
        "first_name": {
          "type": "string",
          "description": "User's first name."
        },
        "last_name": {
          "type": "string",
          "description": "User's last name."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "User's email address."
        },
        "userprofile": {
          "type": "object",
          "description": "User's profile details.",
          "fields": {
            "staff_status": {
              "type": "string",
              "enum": ["customer", "administrator", "sales", "design"],
              "description": "Role of the user.",
              "default": "customer"
            },
            "phone_number": {
              "type": "string",
              "description": "User's phone number.",
              "nullable": true
            },
            "address": {
              "type": "string",
              "description": "User's address.",
              "nullable": true
            },
            "profile_picture": {
              "type": "string",
              "format": "uri",
              "description": "URL to the user's profile picture.",
              "nullable": true
            }
          }
        }
      },
      "permissions": {
        "list": ["authenticated"],
        "retrieve": ["authenticated"],
        "create": ["admin"],
        "update": ["admin", "self"],
        "delete": ["admin"]
      }
    },
    "Customer": {
      "endpoint": "/api/customers/",
      "description": "Represents a customer or supplier in the system.",
      "fields": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier for the customer."
        },
        "name": {
          "type": "string",
          "description": "Customer's full name."
        },
        "id_type": {
          "type": "string",
          "description": "Type of identification (e.g., CÃ©dula).",
          "nullable": true
        },
        "id_number": {
          "type": "string",
          "description": "Unique identification number.",
          "unique": true
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "Customer's email address.",
          "nullable": true
        },
        "phone_number": {
          "type": "string",
          "description": "Customer's phone number.",
          "nullable": true
        },
        "address": {
          "type": "string",
          "description": "Customer's address.",
          "nullable": true
        },
        "company": {
          "type": "string",
          "description": "Customer's company name.",
          "nullable": true
        },
        "tipo_contacto": {
          "type": "string",
          "enum": ["Cliente", "Proveedor"],
          "description": "Type of contact.",
          "default": "Cliente"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp.",
          "read_only": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp.",
          "read_only": true
        },
        "user": {
          "type": "object",
          "description": "Associated user account.",
          "fields": {
            "$ref": "#/api/User"
          },
          "nullable": true
        }
      },
      "permissions": {
        "list": ["admin", "sales", "self"],
        "retrieve": ["admin", "sales", "self"],
        "create": ["admin", "sales"],
        "update": ["admin", "sales", "self"],
        "delete": ["admin"]
      }
    },
    "Order": {
      "endpoint": "/api/orders/",
      "description": "Represents an order placed by a customer.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the order."
        },
        "order_number": {
          "type": "string",
          "description": "Unique order number (e.g., O00000001).",
          "read_only": true
        },
        "pedido_number": {
          "type": "string",
          "description": "Unique pedido number assigned when in progress (e.g., P00000001 or PU00000001 for urgent).",
          "read_only": true,
          "nullable": true
        },
        "customer": {
          "type": "object",
          "description": "Customer who placed the order.",
          "fields": {
            "$ref": "#/api/Customer"
          },
          "read_only": true
        },
        "customer_id": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the customer (write-only).",
          "write_only": true
        },
        "created_by": {
          "type": "string",
          "description": "Username of the user who created the order.",
          "read_only": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp.",
          "read_only": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp.",
          "read_only": true
        },
        "order_date": {
          "type": "string",
          "format": "date",
          "description": "Date the order was placed.",
          "nullable": true
        },
        "payment_50_date": {
          "type": "string",
          "format": "date",
          "description": "Date of 50% payment confirmation.",
          "nullable": true
        },
        "design_confirmation_date": {
          "type": "string",
          "format": "date",
          "description": "Date the design was confirmed.",
          "nullable": true
        },
        "delivery_date": {
          "type": "string",
          "format": "date",
          "description": "Scheduled delivery date.",
          "nullable": true
        },
        "status": {
          "type": "string",
          "enum": ["pending", "in_progress", "design_pending", "design_confirmed", "completed"],
          "description": "Current status of the order.",
          "default": "pending"
        },
        "order_type": {
          "type": "string",
          "enum": ["normal", "urgent"],
          "description": "Type of order.",
          "default": "normal"
        },
        "items": {
          "type": "array",
          "description": "List of items in the order.",
          "items": {
            "$ref": "#/api/OrderItem"
          }
        },
        "uniform_detail": {
          "type": "object",
          "description": "Details for uniform orders.",
          "fields": {
            "$ref": "#/api/UniformDetail"
          },
          "nullable": true
        },
        "events": {
          "type": "array",
          "description": "List of events associated with the order.",
          "items": {
            "$ref": "#/api/OrderEvent"
          },
          "read_only": true
        },
        "use_points": {
          "type": "boolean",
          "description": "Whether to use customer points for discount.",
          "write_only": true,
          "default": false
        }
      },
      "permissions": {
        "list": ["admin", "sales", "design (design_pending/design_confirmed)", "customer (own orders)"],
        "retrieve": ["admin", "sales", "design (design_pending/design_confirmed)", "customer (own orders)"],
        "create": ["admin", "sales", "customer"],
        "update": ["admin", "sales", "design (design-related)", "customer (own orders)"],
        "delete": ["admin"],
        "add_event": ["admin", "sales", "design"],
        "update_event": ["admin", "sales", "design"],
        "delete_event": ["admin", "sales", "design"],
        "generate_invoice_pdf": ["admin", "sales"]
      },
      "additional_endpoints": [
        {
          "path": "/api/orders/{pk}/events/{event_id}/",
          "methods": ["PUT", "DELETE"],
          "description": "Update or delete a specific order event."
        },
        {
          "path": "/api/orders/{pk}/generate_invoice_pdf/",
          "methods": ["GET"],
          "description": "Generate a PDF invoice for the order."
        }
      ]
    },
    "OrderItem": {
      "description": "Represents an item within an order.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the order item.",
          "required": false,
          "nullable": true
        },
        "product": {
          "type": "integer",
          "description": "ID of the predefined product (if applicable).",
          "nullable": true
        },
        "product_type": {
          "type": "integer",
          "description": "ID of the product type for custom products (if applicable).",
          "nullable": true
        },
        "quantity": {
          "type": "integer",
          "description": "Quantity of the item."
        },
        "unit_price": {
          "type": "number",
          "format": "decimal",
          "description": "Price per unit, adjusted for promotions/points."
        },
        "design_file": {
          "type": "string",
          "format": "uri",
          "description": "URL to the design file for custom products.",
          "nullable": true
        }
      }
    },
    "UniformDetail": {
      "description": "Details specific to uniform orders.",
      "fields": {
        "shirt_quantity": {
          "type": "integer",
          "description": "Number of shirts.",
          "default": 0
        },
        "shirt_fabric": {
          "type": "string",
          "description": "Fabric type for shirts.",
          "nullable": true
        },
        "pants_quantity": {
          "type": "integer",
          "description": "Number of pants.",
          "default": 0
        },
        "pants_fabric": {
          "type": "string",
          "description": "Fabric type for pants.",
          "nullable": true
        },
        "polo_quantity": {
          "type": "integer",
          "description": "Number of polos.",
          "default": 0
        },
        "polo_fabric": {
          "type": "string",
          "description": "Fabric type for polos.",
          "nullable": true
        },
        "bag_quantity": {
          "type": "integer",
          "description": "Number of bags.",
          "default": 0
        },
        "bag_fabric": {
          "type": "string",
          "description": "Fabric type for bags.",
          "nullable": true
        },
        "player_uniform_photo": {
          "type": "string",
          "format": "uri",
          "description": "URL to the player uniform photo.",
          "nullable": true
        },
        "goalkeeper_uniform_photo": {
          "type": "string",
          "format": "uri",
          "description": "URL to the goalkeeper uniform photo.",
          "nullable": true
        },
        "neck_photo": {
          "type": "string",
          "format": "uri",
          "description": "URL to the neck photo.",
          "nullable": true
        },
        "pants_photo": {
          "type": "string",
          "format": "uri",
          "description": "URL to the pants photo.",
          "nullable": true
        },
        "sponsorships": {
          "type": "string",
          "description": "Comma-separated list of sponsorships.",
          "nullable": true
        },
        "players": {
          "type": "array",
          "description": "List of players for the uniform.",
          "items": {
            "$ref": "#/api/Player"
          }
        }
      }
    },
    "Player": {
      "description": "Represents a player in a uniform order.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the player.",
          "required": false,
          "nullable": true
        },
        "first_name": {
          "type": "string",
          "description": "Player's first name."
        },
        "last_name": {
          "type": "string",
          "description": "Player's last name."
        },
        "number": {
          "type": "integer",
          "description": "Player's uniform number."
        },
        "size": {
          "type": "string",
          "description": "Player's uniform size."
        },
        "gender": {
          "type": "string",
          "enum": ["H", "M"],
          "description": "Player's gender (H for Hombre, M for Mujer)."
        },
        "observaciones": {
          "type": "string",
          "description": "Additional observations.",
          "nullable": true
        },
        "variaciones": {
          "type": "string",
          "description": "Variations for the player's uniform.",
          "nullable": true
        }
      }
    },
    "OrderEvent": {
      "endpoint": "/api/orders/{order_id}/events/",
      "description": "Represents events associated with an order (e.g., design approval, payment confirmation).",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the event."
        },
        "event_type": {
          "type": "string",
          "enum": ["design_approved", "payment_50_confirmed", "delivered"],
          "description": "Type of event."
        },
        "user": {
          "type": "string",
          "description": "Username of the user who triggered the event.",
          "read_only": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the event.",
          "read_only": true
        },
        "document": {
          "type": "string",
          "format": "uri",
          "description": "URL to the associated document (e.g., payment proof).",
          "nullable": true
        }
      },
      "permissions": {
        "create": ["admin", "sales", "design"],
        "update": ["admin", "sales", "design"],
        "delete": ["admin", "sales", "design"]
      }
    },
    "Promotion": {
      "endpoint": "/api/promotions/",
      "description": "Represents a promotional offer.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the promotion."
        },
        "name": {
          "type": "string",
          "description": "Name of the promotion."
        },
        "description": {
          "type": "string",
          "description": "Description of the promotion.",
          "nullable": true
        },
        "min_amount": {
          "type": "number",
          "format": "decimal",
          "description": "Minimum purchase amount to apply the promotion.",
          "nullable": true
        },
        "discount": {
          "type": "number",
          "format": "decimal",
          "description": "Discount percentage."
        },
        "products": {
          "type": "array",
          "description": "List of product IDs eligible for the promotion.",
          "items": {
            "type": "integer"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp.",
          "read_only": true
        }
      },
      "permissions": {
        "list": ["admin", "sales", "design"],
        "retrieve": ["admin", "sales", "design"],
        "create": ["admin", "sales", "design"],
        "update": ["admin", "sales", "design"],
        "delete": ["admin", "sales", "design"]
      }
    },
    "CustomerPoints": {
      "endpoint": "/api/customer-points/",
      "description": "Tracks points earned by customers.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the points record."
        },
        "customer": {
          "type": "string",
          "format": "uuid",
          "description": "ID of the customer."
        },
        "points": {
          "type": "integer",
          "description": "Number of points earned or used.",
          "default": 0
        },
        "earned_at": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when points were earned.",
          "read_only": true
        }
      },
      "permissions": {
        "list": ["admin", "sales"],
        "retrieve": ["admin", "sales"],
        "create": ["admin", "sales"],
        "update": ["admin", "sales"],
        "delete": ["admin", "sales"]
      }
    },
    "ProductionQueue": {
      "endpoint": "/api/production-queues/",
      "description": "Manages the production queue for orders.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the queue entry."
        },
        "order": {
          "type": "integer",
          "description": "ID of the associated order."
        },
        "order_number": {
          "type": "string",
          "description": "Order number (e.g., O00000001).",
          "read_only": true
        },
        "customer_name": {
          "type": "string",
          "description": "Name of the customer.",
          "read_only": true
        },
        "queue_type": {
          "type": "string",
          "enum": ["normal", "urgent"],
          "description": "Type of queue."
        },
        "delivery_date": {
          "type": "string",
          "format": "date",
          "description": "Scheduled delivery date."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp.",
          "read_only": true
        },
        "status": {
          "type": "string",
          "enum": ["pending", "in_progress", "design_pending", "design_confirmed", "completed"],
          "description": "Current status of the order.",
          "read_only": true
        },
        "items": {
          "type": "array",
          "description": "List of items in the order.",
          "items": {
            "type": "object",
            "fields": {
              "product_name": {
                "type": "string",
                "description": "Name of the product or product type."
              },
              "quantity": {
                "type": "integer",
                "description": "Quantity of the item."
              },
              "unit_price": {
                "type": "string",
                "description": "Unit price of the item."
              }
            }
          },
          "read_only": true
        }
      },
      "permissions": {
        "list": ["admin", "sales", "design"],
        "retrieve": ["admin", "sales", "design"],
        "create": ["admin", "sales", "design"],
        "update": ["admin", "sales", "design"],
        "delete": ["admin", "sales", "design"]
      }
    },
    "Invoice": {
      "endpoint": "/api/invoices/",
      "description": "Represents an invoice for an order.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the invoice."
        },
        "order": {
          "type": "integer",
          "description": "ID of the associated order."
        },
        "invoice_number": {
          "type": "string",
          "description": "Unique invoice number (e.g., I00000001).",
          "read_only": true
        },
        "total_amount": {
          "type": "number",
          "format": "decimal",
          "description": "Total amount including tax."
        },
        "tax": {
          "type": "number",
          "format": "decimal",
          "description": "Tax amount.",
          "default": 0.00
        },
        "issued_date": {
          "type": "string",
          "format": "date",
          "description": "Date the invoice was issued.",
          "read_only": true
        },
        "signature_field": {
          "type": "string",
          "description": "Signature field for the invoice.",
          "nullable": true
        },
        "reviewed_date": {
          "type": "string",
          "format": "date",
          "description": "Date the invoice was reviewed.",
          "nullable": true
        },
        "packed_date": {
          "type": "string",
          "format": "date",
          "description": "Date the order was packed.",
          "nullable": true
        },
        "delivered_date": {
          "type": "string",
          "format": "date",
          "description": "Date the order was delivered.",
          "nullable": true
        },
        "is_urgent": {
          "type": "boolean",
          "description": "Whether the invoice is for an urgent order.",
          "read_only": true
        }
      },
      "permissions": {
        "list": ["admin", "sales"],
        "retrieve": ["admin", "sales"],
        "create": ["admin", "sales"],
        "update": ["admin", "sales"],
        "delete": ["admin"]
      }
    },
    "Payment": {
      "endpoint": "/api/payments/",
      "description": "Represents a payment for an order.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the payment."
        },
        "order": {
          "type": "integer",
          "description": "ID of the associated order."
        },
        "amount": {
          "type": "number",
          "format": "decimal",
          "description": "Payment amount."
        },
        "payment_date": {
          "type": "string",
          "format": "date",
          "description": "Date of the payment.",
          "read_only": true
        },
        "payment_type": {
          "type": "string",
          "enum": ["partial", "full"],
          "description": "Type of payment.",
          "default": "partial"
        },
        "reference_document": {
          "type": "string",
          "format": "uri",
          "description": "URL to the payment reference document.",
          "nullable": true
        }
      },
      "permissions": {
        "list": ["admin", "sales"],
        "retrieve": ["admin", "sales"],
        "create": ["admin", "sales"],
        "update": ["admin", "sales"],
        "delete": ["admin"]
      }
    },
    "Dashboard": {
      "endpoint": "/api/dashboard/",
      "description": "Provides metrics for sales, response times, and order status distribution.",
      "fields": {
        "total_sales": {
          "type": "number",
          "format": "float",
          "description": "Total sales amount from completed orders."
        },
        "average_response_time_days": {
          "type": "number",
          "format": "float",
          "description": "Average time (in days) between order date and design confirmation."
        },
        "status_distribution": {
          "type": "array",
          "description": "Distribution of orders by status.",
          "items": {
            "type": "object",
            "fields": {
              "status": {
                "type": "string",
                "enum": ["pending", "in_progress", "design_pending", "design_confirmed", "completed"],
                "description": "Order status."
              },
              "count": {
                "type": "integer",
                "description": "Number of orders with this status."
              }
            }
          }
        }
      },
      "permissions": {
        "get": ["admin", "sales"]
      }
    },
    "ProductionQueueDashboard": {
      "endpoint": "/api/production-queue-dashboard/",
      "description": "Provides data for production queue visualization.",
      "fields": {
        "queues": {
          "type": "array",
          "description": "List of production queue entries.",
          "items": {
            "$ref": "#/api/ProductionQueue"
          }
        },
        "total_orders": {
          "type": "integer",
          "description": "Total number of orders in the queue."
        },
        "by_status": {
          "type": "object",
          "description": "Count of orders by status.",
          "fields": {
            "pending": {
              "type": "integer",
              "description": "Number of pending orders."
            },
            "in_progress": {
              "type": "integer",
              "description": "Number of in-progress orders."
            },
            "design_pending": {
              "type": "integer",
              "description": "Number of design-pending orders."
            },
            "design_confirmed": {
              "type": "integer",
              "description": "Number of design-confirmed orders."
            },
            "completed": {
              "type": "integer",
              "description": "Number of completed orders."
            }
          }
        }
      },
      "permissions": {
        "get": ["admin", "sales", "design"]
      }
    },
    "InactiveOrders": {
      "endpoint": "/api/inactive-orders/",
      "description": "Lists orders inactive for a specified number of days and sends notifications.",
      "fields": {
        "message": {
          "type": "string",
          "description": "Confirmation message with the number of inactive orders notified."
        }
      },
      "query_params": {
        "days": {
          "type": "integer",
          "description": "Number of days to consider for inactivity (default: 3).",
          "default": 3
        }
      },
      "permissions": {
        "get": ["admin", "sales"]
      }
    },
    "Email": {
      "endpoint": "/api/send-email/",
      "description": "Sends an email to specified recipients.",
      "fields": {
        "subject": {
          "type": "string",
          "description": "Email subject.",
          "max_length": 200
        },
        "message": {
          "type": "string",
          "description": "Email body.",
          "max_length": 4000
        },
        "from_email": {
          "type": "string",
          "format": "email",
          "description": "Sender's email address."
        },
        "recipient_list": {
          "type": "string",
          "description": "Comma-separated list of recipient emails."
        }
      },
      "permissions": {
        "post": ["admin"]
      }
    }
  },
  "blog": {
    "BlogPost": {
      "endpoint": "/blog/posts/",
      "description": "Represents a blog post in the system.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the blog post."
        },
        "author": {
          "type": "string",
          "description": "Username of the post's author.",
          "read_only": true
        },
        "title": {
          "type": "string",
          "description": "Title of the blog post.",
          "max_length": 100
        },
        "content": {
          "type": "string",
          "description": "Content of the blog post."
        },
        "image": {
          "type": "string",
          "format": "uri",
          "description": "URL to the blog post image.",
          "nullable": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp.",
          "read_only": true
        },
        "comercial_activity": {
          "type": "string",
          "description": "Commercial activity associated with the post.",
          "nullable": true
        },
        "comments": {
          "type": "array",
          "description": "List of comments on the blog post.",
          "items": {
            "$ref": "#/blog/Comment"
          },
          "read_only": true
        },
        "likes": {
          "type": "array",
          "description": "List of users who liked the blog post.",
          "items": {
            "$ref": "#/blog/Like"
          },
          "read_only": true
        }
      },
      "permissions": {
        "list": ["any"],
        "retrieve": ["any"],
        "create": ["authenticated"],
        "update": ["admin", "author"],
        "delete": ["admin", "author"]
      }
    },
    "Comment": {
      "endpoint": "/blog/posts/{blog_post_id}/comments/",
      "description": "Represents a comment on a blog post.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the comment."
        },
        "user": {
          "type": "string",
          "description": "Username of the commenter.",
          "read_only": true
        },
        "content": {
          "type": "string",
          "description": "Content of the comment.",
          "allow_blank": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp.",
          "read_only": true
        }
      },
      "permissions": {
        "list": ["any"],
        "retrieve": ["any"],
        "create": ["authenticated"],
        "update": ["admin", "author"],
        "delete": ["admin", "author"]
      }
    },
    "Like": {
      "endpoint": "/blog/posts/{blog_post_id}/likes/",
      "description": "Represents a like on a blog post.",
      "fields": {
        "user": {
          "type": "string",
          "description": "Username of the user who liked the post.",
          "read_only": true
        }
      },
      "permissions": {
        "create": ["authenticated"]
      }
    }
  },
  "products": {
    "ProductType": {
      "endpoint": "/products/product-types/",
      "description": "Represents a type of product (e.g., tazas, uniformes).",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the product type."
        },
        "name": {
          "type": "string",
          "description": "Name of the product type."
        },
        "description": {
          "type": "string",
          "description": "Description of the product type.",
          "nullable": true
        },
        "base_price": {
          "type": "number",
          "format": "decimal",
          "description": "Base price for the product type."
        },
        "delivery_time_days": {
          "type": "integer",
          "description": "Number of days required for delivery."
        },
        "daily_production_capacity": {
          "type": "integer",
          "description": "Maximum units that can be produced daily.",
          "default": 100
        },
        "created_by": {
          "type": "object",
          "description": "User who created the product type.",
          "fields": {
            "$ref": "#/api/User"
          },
          "read_only": true
        },
        "created_by_id": {
          "type": "integer",
          "description": "ID of the user who created the product type.",
          "write_only": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp.",
          "read_only": true
        }
      },
      "permissions": {
        "list": ["authenticated"],
        "retrieve": ["authenticated"],
        "create": ["admin", "sales", "design"],
        "update": ["admin", "sales", "design"],
        "delete": ["admin", "sales", "design"]
      }
    },
    "Characteristic": {
      "endpoint": "/products/characteristics/",
      "description": "Represents a characteristic of a product (e.g., color, material).",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the characteristic."
        },
        "name": {
          "type": "string",
          "description": "Name of the characteristic."
        },
        "description": {
          "type": "string",
          "description": "Description of the characteristic.",
          "nullable": true
        }
      },
      "permissions": {
        "list": ["authenticated"],
        "retrieve": ["authenticated"],
        "create": ["admin", "sales", "design"],
        "update": ["admin", "sales", "design"],
        "delete": ["admin", "sales", "design"]
      }
    },
    "Product": {
      "endpoint": "/products/products/",
      "description": "Represents a specific product with a design.",
      "fields": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the product."
        },
        "product_type": {
          "type": "object",
          "description": "Associated product type.",
          "fields": {
            "$ref": "#/products/ProductType"
          },
          "read_only": true
        },
        "product_type_id": {
          "type": "integer",
          "description": "ID of the product type.",
          "write_only": true
        },
        "name": {
          "type": "string",
          "description": "Name of the product."
        },
        "description": {
          "type": "string",
          "description": "Description of the product.",
          "nullable": true
        },
        "design_file": {
          "type": "string",
          "format": "uri",
          "description": "URL to the product's design file.",
          "nullable": true
        },
        "additional_price": {
          "type": "number",
          "format": "decimal",
          "description": "Additional price on top of the base price.",
          "default": 0.00
        },
        "characteristics": {
          "type": "array",
          "description": "List of characteristics associated with the product.",
          "items": {
            "$ref": "#/products/Characteristic"
          },
          "read_only": true
        },
        "characteristic_ids": {
          "type": "array",
          "description": "List of characteristic IDs (write-only).",
          "items": {
            "type": "integer"
          },
          "write_only": true
        },
        "created_by": {
          "type": "object",
          "description": "User who created the product.",
          "fields": {
            "$ref": "#/api/User"
          },
          "read_only": true
        },
        "created_by_id": {
          "type": "integer",
          "description": "ID of the user who created the product.",
          "write_only": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp.",
          "read_only": true
        }
      },
      "permissions": {
        "list": ["authenticated"],
        "retrieve": ["authenticated"],
        "create": ["admin", "sales", "design"],
        "update": ["admin", "sales", "design"],
        "delete": ["admin", "sales", "design"]
      }
    }
  },
  "auth": {
    "Signup": {
      "endpoint": "/api/signup/",
      "description": "Registers a new user.",
      "fields": {
        "token": {
          "type": "string",
          "description": "Authentication token for the new user."
        }
      },
      "request_body": {
        "first_name": {
          "type": "string",
          "description": "User's first name."
        },
        "last_name": {
          "type": "string",
          "description": "User's last name."
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "User's email address."
        },
        "password": {
          "type": "string",
          "description": "User's password."
        },
        "staff_status": {
          "type": "string",
          "enum": ["customer", "administrator", "sales", "design"],
          "description": "User's role.",
          "default": "customer"
        },
        "phone_number": {
          "type": "string",
          "description": "User's phone number.",
          "nullable": true
        },
        "address": {
          "type": "string",
          "description": "User's address.",
          "nullable": true
        }
      },
      "permissions": {
        "post": ["any"]
      }
    },
    "Login": {
      "endpoint": "/api/login/",
      "description": "Authenticates a user and returns a token.",
      "fields": {
        "token": {
          "type": "string",
          "description": "Authentication token."
        }
      },
      "request_body": {
        "username": {
          "type": "string",
          "description": "User's username (email)."
        },
        "password": {
          "type": "string",
          "description": "User's password."
        }
      },
      "permissions": {
        "post": ["any"]
      }
    },
    "ResetPassword": {
      "endpoint": "/api/reset_password/",
      "description": "Initiates a password reset by sending an email with a reset link.",
      "fields": {
        "message": {
          "type": "string",
          "description": "Confirmation message."
        }
      },
      "request_body": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "User's email address."
        }
      },
      "permissions": {
        "post": ["any"]
      }
    },
    "ResetPasswordUser": {
      "endpoint": "/api/reset_password_user/{reset_token}/",
      "description": "Resets a user's password using a token.",
      "fields": {
        "message": {
          "type": "string",
          "description": "Confirmation message."
        }
      },
      "request_body": {
        "password": {
          "type": "string",
          "description": "New password."
        }
      },
      "permissions": {
        "post": ["any"]
      }
    }
  }
}